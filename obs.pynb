{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "![rmotr](https://user-images.githubusercontent.com/7065401/52071918-bda15380-2562-11e9-828c-7f95297e4a82.png)\n",
    "<hr style=\"margin-bottom: 40px;\">\n",
    "\n",
    "<img src=\"https://user-images.githubusercontent.com/7065401/68886973-eca24380-06f6-11ea-8327-3e9a22e22b43.png\"\n",
    "    style=\"width:400px; float: right; margin: 0 40px 40px 40px;\"></img>\n",
    "\n",
    "### Project\n",
    "\n",
    "# Health and Obesity trends\n",
    "\n",
    "Let's put in practice the topics covered in the course and analyze health and obesity trends."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "![purple-divider](https://user-images.githubusercontent.com/7065401/52071927-c1cd7100-2562-11e9-908a-dde91ba14e59.png)\n",
    "\n",
    "## Hands on! "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "import sqlite3\n",
    "import requests\n",
    "\n",
    "%matplotlib inline"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "![green-divider](https://user-images.githubusercontent.com/7065401/52071924-c003ad80-2562-11e9-8297-1c6595f8a7ff.png)\n",
    "\n",
    "###Â Read the dump of `USDA Food Composition Database` into a `food_df` DataFrame variable.\n",
    "\n",
    "The National Nutrient Database (NNDB) is provided by the [USDA](https://ndb.nal.usda.gov/ndb/) to allow the public to get standardized information on foods. They document the database and all supporting information on the USDA website.\n",
    "\n",
    "> Although the file format says \"txt\", we call these plain CSVs files and read it using `read_csv` method. Be aware of parsing correctly `NaN` values, data separator, encoding, quotechar and any other parsing option you think necessary.\n",
    "\n",
    "Here's a preview of that file:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "~01001~^~0100~^~Butter, salted~^~BUTTER,WITH SALT~^^^~Y~^^0^^6.38^4.27^8.79^3.87\n",
      "~01002~^~0100~^~Butter, whipped, with salt~^~BUTTER,WHIPPED,W/ SALT~^^^~Y~^^0^^6.38^^^\n",
      "~01003~^~0100~^~Butter oil, anhydrous~^~BUTTER OIL,ANHYDROUS~^^^~Y~^^0^^6.38^4.27^8.79^3.87\n",
      "~01004~^~0100~^~Cheese, blue~^~CHEESE,BLUE~^^^~Y~^^0^^6.38^4.27^8.79^3.87\n",
      "~01005~^~0100~^~Cheese, brick~^~CHEESE,BRICK~^^^~Y~^^0^^6.38^4.27^8.79^3.87\n",
      "~01006~^~0100~^~Cheese, brie~^~CHEESE,BRIE~^^^~Y~^^0^^6.38^4.27^8.79^3.87\n",
      "~01007~^~0100~^~Cheese, camembert~^~CHEESE,CAMEMBERT~^^^~Y~^^0^^6.38^4.27^8.79^3.87\n",
      "~01008~^~0100~^~Cheese, caraway~^~CHEESE,CARAWAY~^^^^^0^^6.38^4.27^8.79^3.87\n",
      "~01009~^~0100~^~Cheese, cheddar (Includes foods for USDA's Food Distribution Program)~^~CHEESE,CHEDDAR~^^^~Y~^^0^^^^^\n",
      "~01010~^~0100~^~Cheese, cheshire~^~CHEESE,CHESHIRE~^^^^^0^^6.38^4.27^8.79^3.87\n"
     ]
    }
   ],
   "source": [
    "!head data/FOOD_DES.txt"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The column names are taken from the original documentation for this dataset.\n",
    "\n",
    "> Use the given column names while reading the data."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [],
   "source": [
    "column_names = ['NDB_No', 'FdGrp_Cd', 'Long_Desc', 'Shrt_Desc', 'ComName',\n",
    "                'ManufacName', 'Survey', 'Ref_desc', 'Refuse', 'SciName',\n",
    "                'N_Factor', 'Pro_Factor', 'Fat_Factor', 'CHO_Factor']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>NDB_No</th>\n",
       "      <th>FdGrp_Cd</th>\n",
       "      <th>Long_Desc</th>\n",
       "      <th>Shrt_Desc</th>\n",
       "      <th>ComName</th>\n",
       "      <th>ManufacName</th>\n",
       "      <th>Survey</th>\n",
       "      <th>Ref_desc</th>\n",
       "      <th>Refuse</th>\n",
       "      <th>SciName</th>\n",
       "      <th>N_Factor</th>\n",
       "      <th>Pro_Factor</th>\n",
       "      <th>Fat_Factor</th>\n",
       "      <th>CHO_Factor</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1001</td>\n",
       "      <td>100</td>\n",
       "      <td>Butter, salted</td>\n",
       "      <td>BUTTER,WITH SALT</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Y</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>6.38</td>\n",
       "      <td>4.27</td>\n",
       "      <td>8.79</td>\n",
       "      <td>3.87</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1002</td>\n",
       "      <td>100</td>\n",
       "      <td>Butter, whipped, with salt</td>\n",
       "      <td>BUTTER,WHIPPED,W/ SALT</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Y</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>6.38</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1003</td>\n",
       "      <td>100</td>\n",
       "      <td>Butter oil, anhydrous</td>\n",
       "      <td>BUTTER OIL,ANHYDROUS</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Y</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>6.38</td>\n",
       "      <td>4.27</td>\n",
       "      <td>8.79</td>\n",
       "      <td>3.87</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1004</td>\n",
       "      <td>100</td>\n",
       "      <td>Cheese, blue</td>\n",
       "      <td>CHEESE,BLUE</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Y</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>6.38</td>\n",
       "      <td>4.27</td>\n",
       "      <td>8.79</td>\n",
       "      <td>3.87</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1005</td>\n",
       "      <td>100</td>\n",
       "      <td>Cheese, brick</td>\n",
       "      <td>CHEESE,BRICK</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Y</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>6.38</td>\n",
       "      <td>4.27</td>\n",
       "      <td>8.79</td>\n",
       "      <td>3.87</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   NDB_No  FdGrp_Cd                   Long_Desc               Shrt_Desc  \\\n",
       "0    1001       100              Butter, salted        BUTTER,WITH SALT   \n",
       "1    1002       100  Butter, whipped, with salt  BUTTER,WHIPPED,W/ SALT   \n",
       "2    1003       100       Butter oil, anhydrous    BUTTER OIL,ANHYDROUS   \n",
       "3    1004       100                Cheese, blue             CHEESE,BLUE   \n",
       "4    1005       100               Cheese, brick            CHEESE,BRICK   \n",
       "\n",
       "  ComName ManufacName Survey Ref_desc  Refuse SciName  N_Factor  Pro_Factor  \\\n",
       "0     NaN         NaN      Y      NaN     0.0     NaN      6.38        4.27   \n",
       "1     NaN         NaN      Y      NaN     0.0     NaN      6.38         NaN   \n",
       "2     NaN         NaN      Y      NaN     0.0     NaN      6.38        4.27   \n",
       "3     NaN         NaN      Y      NaN     0.0     NaN      6.38        4.27   \n",
       "4     NaN         NaN      Y      NaN     0.0     NaN      6.38        4.27   \n",
       "\n",
       "   Fat_Factor  CHO_Factor  \n",
       "0        8.79        3.87  \n",
       "1         NaN         NaN  \n",
       "2        8.79        3.87  \n",
       "3        8.79        3.87  \n",
       "4        8.79        3.87  "
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "food_df = pd.read_csv(\"data/FOOD_DES.txt\",\n",
    "                    header = None,\n",
    "                    names = column_names,\n",
    "                    sep='^',\n",
    "                    quotechar = \"~\",\n",
    "                    encoding='iso-8859-1'\n",
    "                     )\n",
    "food_df.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "How many products do we have?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "2429"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "food_df.shape[0]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "![green-divider](https://user-images.githubusercontent.com/7065401/52071924-c003ad80-2562-11e9-8297-1c6595f8a7ff.png)\n",
    "\n",
    "###Â Variables distribution\n",
    "\n",
    "Analyze how values are distributed:\n",
    "\n",
    "- Create an histogram of `Refuse` variable.\n",
    "- Create a boxplot of `N_Factor` variable."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x7f99d26200d0>"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1008x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "food_df[\"Refuse\"].plot(kind = \"hist\",figsize = (14,6),bins = 30)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x7f99d23fa5d0>"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "food_df[\"N_Factor\"].plot(kind = \"box\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "![green-divider](https://user-images.githubusercontent.com/7065401/52071924-c003ad80-2562-11e9-8297-1c6595f8a7ff.png)\n",
    "\n",
    "###Â Which are the top-10 food manufacturers with more products on `food_df`."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [],
   "source": [
    "top_10 = food_df[\"ManufacName\"].value_counts().head(10)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Also create a bar plot showing that results."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x7f99db396850>"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1008x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "top_10.plot(kind = \"bar\",figsize = (14,6))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "![green-divider](https://user-images.githubusercontent.com/7065401/52071924-c003ad80-2562-11e9-8297-1c6595f8a7ff.png)\n",
    "\n",
    "## Analyzing Starbucks nutrition facts\n",
    "\n",
    "Starbucks is an American coffee chain founded in Seattle. It serves both beverages and food.\n",
    "\n",
    "<img width=\"650\" alt=\"Starbucks\" src=\"https://user-images.githubusercontent.com/7065401/68891327-57f01380-06ff-11ea-8461-eb35ba0c3bb0.png\">\n",
    "\n",
    "We'll analyze the nutritional information for Starbucksâ drink menu items using this [Nutrition facts for Starbucks drinks](https://www.kaggle.com/starbucks/starbucks) data. All nutritional information for drinks are for a 12oz serving size."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "![green-divider](https://user-images.githubusercontent.com/7065401/52071924-c003ad80-2562-11e9-8297-1c6595f8a7ff.png)\n",
    "\n",
    "###Â Getting Starbucks' drinks information\n",
    "\n",
    "- Create an sqlite3 connection to the `starbucks.db` SQLite3 database.\n",
    "- Read from the `drinks` table just the items with more than 100 calories and save them to a `drinks_df` DataFrame variable."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Item</th>\n",
       "      <th>Calories</th>\n",
       "      <th>Fat</th>\n",
       "      <th>Carb</th>\n",
       "      <th>Fiber</th>\n",
       "      <th>Protein</th>\n",
       "      <th>Sodium</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Evolution Freshâ¢ Organic Ginger Limeade</td>\n",
       "      <td>110.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>28.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>5.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Iced Espresso Classics - Vanilla Latte</td>\n",
       "      <td>130.0</td>\n",
       "      <td>2.5</td>\n",
       "      <td>21.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>65.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Iced Espresso Classics - Caffe Mocha</td>\n",
       "      <td>140.0</td>\n",
       "      <td>2.5</td>\n",
       "      <td>23.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>90.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Iced Espresso Classics - Caramel Macchiato</td>\n",
       "      <td>130.0</td>\n",
       "      <td>2.5</td>\n",
       "      <td>21.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>65.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>TazoÂ® Bottled Black Mango</td>\n",
       "      <td>150.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>38.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>15.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                         Item  Calories  Fat  Carb  Fiber  \\\n",
       "0     Evolution Freshâ¢ Organic Ginger Limeade     110.0  0.0  28.0    0.0   \n",
       "1      Iced Espresso Classics - Vanilla Latte     130.0  2.5  21.0    0.0   \n",
       "2        Iced Espresso Classics - Caffe Mocha     140.0  2.5  23.0    0.0   \n",
       "3  Iced Espresso Classics - Caramel Macchiato     130.0  2.5  21.0    0.0   \n",
       "4                   TazoÂ® Bottled Black Mango     150.0  0.0  38.0    0.0   \n",
       "\n",
       "   Protein  Sodium  \n",
       "0      0.0     5.0  \n",
       "1      5.0    65.0  \n",
       "2      5.0    90.0  \n",
       "3      5.0    65.0  \n",
       "4      0.0    15.0  "
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "conn = sqlite3.connect(\"data/starbucks.db\")\n",
    "\n",
    "drinks_df = pd.read_sql(\"\"\"SELECT * FROM drinks WHERE Calories > 100\"\"\",conn)\n",
    "\n",
    "conn.close()\n",
    "drinks_df.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "![green-divider](https://user-images.githubusercontent.com/7065401/52071924-c003ad80-2562-11e9-8297-1c6595f8a7ff.png)\n",
    "\n",
    "### Which is the item with the highest calories?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Item</th>\n",
       "      <th>Calories</th>\n",
       "      <th>Fat</th>\n",
       "      <th>Carb</th>\n",
       "      <th>Fiber</th>\n",
       "      <th>Protein</th>\n",
       "      <th>Sodium</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>31</th>\n",
       "      <td>StarbucksÂ® Signature Hot Chocolate</td>\n",
       "      <td>430.0</td>\n",
       "      <td>26.0</td>\n",
       "      <td>45.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>12.0</td>\n",
       "      <td>115.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                  Item  Calories   Fat  Carb  Fiber  Protein  \\\n",
       "31  StarbucksÂ® Signature Hot Chocolate     430.0  26.0  45.0    5.0     12.0   \n",
       "\n",
       "    Sodium  \n",
       "31   115.0  "
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "max_cal = drinks_df[\"Calories\"].max()\n",
    "drinks_df.loc[drinks_df[\"Calories\"] == max_cal,:]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "![green-divider](https://user-images.githubusercontent.com/7065401/52071924-c003ad80-2562-11e9-8297-1c6595f8a7ff.png)\n",
    "\n",
    "### Create two groups of items: \"`less or equal 150 calories`\" and \"`more 150 calories`\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Item</th>\n",
       "      <th>Calories</th>\n",
       "      <th>Fat</th>\n",
       "      <th>Carb</th>\n",
       "      <th>Fiber</th>\n",
       "      <th>Protein</th>\n",
       "      <th>Sodium</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Evolution Freshâ¢ Organic Ginger Limeade</td>\n",
       "      <td>110.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>28.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>5.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Iced Espresso Classics - Vanilla Latte</td>\n",
       "      <td>130.0</td>\n",
       "      <td>2.5</td>\n",
       "      <td>21.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>65.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Iced Espresso Classics - Caffe Mocha</td>\n",
       "      <td>140.0</td>\n",
       "      <td>2.5</td>\n",
       "      <td>23.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>90.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Iced Espresso Classics - Caramel Macchiato</td>\n",
       "      <td>130.0</td>\n",
       "      <td>2.5</td>\n",
       "      <td>21.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>65.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>TazoÂ® Bottled Black Mango</td>\n",
       "      <td>150.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>38.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>15.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>TazoÂ® Bottled Black with Lemon</td>\n",
       "      <td>140.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>35.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>10.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>TazoÂ® Bottled Brambleberry</td>\n",
       "      <td>140.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>35.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>15.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>TazoÂ® Bottled Giant Peach</td>\n",
       "      <td>150.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>37.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>15.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>TazoÂ® Bottled Lemon Ginger</td>\n",
       "      <td>120.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>31.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>10.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>TazoÂ® Bottled Organic Black Lemonade</td>\n",
       "      <td>140.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>35.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>10.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>TazoÂ® Bottled Organic Iced Green Tea</td>\n",
       "      <td>120.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>31.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>10.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>TazoÂ® Bottled Plum Pomegranate</td>\n",
       "      <td>140.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>35.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>10.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>TazoÂ® Bottled Tazoberry</td>\n",
       "      <td>150.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>38.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>15.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>TazoÂ® Bottled White Cranberry</td>\n",
       "      <td>140.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>35.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>10.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>Iced Espresso Classics - Vanilla Latte</td>\n",
       "      <td>130.0</td>\n",
       "      <td>2.5</td>\n",
       "      <td>21.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>65.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>Iced Espresso Classics - Caffe Mocha</td>\n",
       "      <td>140.0</td>\n",
       "      <td>2.5</td>\n",
       "      <td>23.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>90.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>Iced Espresso Classics - Caramel Macchiato</td>\n",
       "      <td>130.0</td>\n",
       "      <td>2.5</td>\n",
       "      <td>21.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>65.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>TazoÂ® Bottled Black Mango</td>\n",
       "      <td>150.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>38.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>15.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>TazoÂ® Bottled Black with Lemon</td>\n",
       "      <td>140.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>35.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>10.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>TazoÂ® Bottled Brambleberry</td>\n",
       "      <td>140.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>35.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>15.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>TazoÂ® Bottled Giant Peach</td>\n",
       "      <td>150.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>37.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>15.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>TazoÂ® Bottled Lemon Ginger</td>\n",
       "      <td>120.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>31.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>10.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>TazoÂ® Bottled Organic Black Lemonade</td>\n",
       "      <td>140.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>35.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>10.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>TazoÂ® Bottled Organic Iced Green Tea</td>\n",
       "      <td>120.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>31.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>10.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>TazoÂ® Bottled Plum Pomegranate</td>\n",
       "      <td>140.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>35.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>10.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>TazoÂ® Bottled Tazoberry</td>\n",
       "      <td>150.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>38.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>15.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>TazoÂ® Bottled White Cranberry</td>\n",
       "      <td>140.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>35.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>10.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>Vanilla Sweet Cream Cold Brew</td>\n",
       "      <td>110.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>14.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>25.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>34</th>\n",
       "      <td>Cappuccino</td>\n",
       "      <td>120.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>12.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>100.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>39</th>\n",
       "      <td>Iced CaffÃ¨ Latte</td>\n",
       "      <td>130.0</td>\n",
       "      <td>4.5</td>\n",
       "      <td>13.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>115.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>51</th>\n",
       "      <td>Coffee Light FrappuccinoÂ® Blended Coffee</td>\n",
       "      <td>110.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>24.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>200.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>53</th>\n",
       "      <td>Mocha Light FrappuccinoÂ® Blended Coffee</td>\n",
       "      <td>140.0</td>\n",
       "      <td>0.5</td>\n",
       "      <td>28.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>180.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                          Item  Calories  Fat  Carb  Fiber  \\\n",
       "0      Evolution Freshâ¢ Organic Ginger Limeade     110.0  0.0  28.0    0.0   \n",
       "1       Iced Espresso Classics - Vanilla Latte     130.0  2.5  21.0    0.0   \n",
       "2         Iced Espresso Classics - Caffe Mocha     140.0  2.5  23.0    0.0   \n",
       "3   Iced Espresso Classics - Caramel Macchiato     130.0  2.5  21.0    0.0   \n",
       "4                    TazoÂ® Bottled Black Mango     150.0  0.0  38.0    0.0   \n",
       "5               TazoÂ® Bottled Black with Lemon     140.0  0.0  35.0    0.0   \n",
       "6                   TazoÂ® Bottled Brambleberry     140.0  0.0  35.0    0.0   \n",
       "7                    TazoÂ® Bottled Giant Peach     150.0  0.0  37.0    0.0   \n",
       "8                   TazoÂ® Bottled Lemon Ginger     120.0  0.0  31.0    0.0   \n",
       "9         TazoÂ® Bottled Organic Black Lemonade     140.0  0.0  35.0    0.0   \n",
       "10        TazoÂ® Bottled Organic Iced Green Tea     120.0  0.0  31.0    0.0   \n",
       "11              TazoÂ® Bottled Plum Pomegranate     140.0  0.0  35.0    0.0   \n",
       "12                     TazoÂ® Bottled Tazoberry     150.0  0.0  38.0    0.0   \n",
       "13               TazoÂ® Bottled White Cranberry     140.0  0.0  35.0    0.0   \n",
       "14      Iced Espresso Classics - Vanilla Latte     130.0  2.5  21.0    0.0   \n",
       "15        Iced Espresso Classics - Caffe Mocha     140.0  2.5  23.0    0.0   \n",
       "16  Iced Espresso Classics - Caramel Macchiato     130.0  2.5  21.0    0.0   \n",
       "19                   TazoÂ® Bottled Black Mango     150.0  0.0  38.0    0.0   \n",
       "20              TazoÂ® Bottled Black with Lemon     140.0  0.0  35.0    0.0   \n",
       "21                  TazoÂ® Bottled Brambleberry     140.0  0.0  35.0    0.0   \n",
       "22                   TazoÂ® Bottled Giant Peach     150.0  0.0  37.0    0.0   \n",
       "23                  TazoÂ® Bottled Lemon Ginger     120.0  0.0  31.0    0.0   \n",
       "24        TazoÂ® Bottled Organic Black Lemonade     140.0  0.0  35.0    0.0   \n",
       "25        TazoÂ® Bottled Organic Iced Green Tea     120.0  0.0  31.0    0.0   \n",
       "26              TazoÂ® Bottled Plum Pomegranate     140.0  0.0  35.0    0.0   \n",
       "27                     TazoÂ® Bottled Tazoberry     150.0  0.0  38.0    0.0   \n",
       "28               TazoÂ® Bottled White Cranberry     140.0  0.0  35.0    0.0   \n",
       "29               Vanilla Sweet Cream Cold Brew     110.0  6.0  14.0    0.0   \n",
       "34                                  Cappuccino     120.0  4.0  12.0    0.0   \n",
       "39                            Iced CaffÃ¨ Latte     130.0  4.5  13.0    0.0   \n",
       "51    Coffee Light FrappuccinoÂ® Blended Coffee     110.0  0.0  24.0    0.0   \n",
       "53     Mocha Light FrappuccinoÂ® Blended Coffee     140.0  0.5  28.0    1.0   \n",
       "\n",
       "    Protein  Sodium  \n",
       "0       0.0     5.0  \n",
       "1       5.0    65.0  \n",
       "2       5.0    90.0  \n",
       "3       5.0    65.0  \n",
       "4       0.0    15.0  \n",
       "5       0.0    10.0  \n",
       "6       0.0    15.0  \n",
       "7       0.0    15.0  \n",
       "8       0.0    10.0  \n",
       "9       0.0    10.0  \n",
       "10      0.0    10.0  \n",
       "11      0.0    10.0  \n",
       "12      0.0    15.0  \n",
       "13      0.0    10.0  \n",
       "14      5.0    65.0  \n",
       "15      5.0    90.0  \n",
       "16      5.0    65.0  \n",
       "19      0.0    15.0  \n",
       "20      0.0    10.0  \n",
       "21      0.0    15.0  \n",
       "22      0.0    15.0  \n",
       "23      0.0    10.0  \n",
       "24      0.0    10.0  \n",
       "25      0.0    10.0  \n",
       "26      0.0    10.0  \n",
       "27      0.0    15.0  \n",
       "28      0.0    10.0  \n",
       "29      1.0    25.0  \n",
       "34      8.0   100.0  \n",
       "39      8.0   115.0  \n",
       "51      3.0   200.0  \n",
       "53      4.0   180.0  "
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "less_equal_150_cal = drinks_df.loc[drinks_df['Calories'] <= 150.0]\n",
    "less_equal_150_cal"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Item</th>\n",
       "      <th>Calories</th>\n",
       "      <th>Fat</th>\n",
       "      <th>Carb</th>\n",
       "      <th>Fiber</th>\n",
       "      <th>Protein</th>\n",
       "      <th>Sodium</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>TazoÂ® Bottled Black Mango</td>\n",
       "      <td>150.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>38.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>15.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>TazoÂ® Bottled Giant Peach</td>\n",
       "      <td>150.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>37.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>15.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>TazoÂ® Bottled Tazoberry</td>\n",
       "      <td>150.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>38.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>15.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>StarbucksÂ® Doubleshot Protein Dark Chocolate</td>\n",
       "      <td>210.0</td>\n",
       "      <td>2.5</td>\n",
       "      <td>33.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>20.0</td>\n",
       "      <td>115.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>StarbucksÂ® Doubleshot Protein Vanilla</td>\n",
       "      <td>200.0</td>\n",
       "      <td>2.5</td>\n",
       "      <td>34.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>20.0</td>\n",
       "      <td>120.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>TazoÂ® Bottled Black Mango</td>\n",
       "      <td>150.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>38.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>15.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>TazoÂ® Bottled Giant Peach</td>\n",
       "      <td>150.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>37.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>15.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>TazoÂ® Bottled Tazoberry</td>\n",
       "      <td>150.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>38.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>15.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30</th>\n",
       "      <td>Hot Chocolate</td>\n",
       "      <td>320.0</td>\n",
       "      <td>9.0</td>\n",
       "      <td>47.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>14.0</td>\n",
       "      <td>160.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>31</th>\n",
       "      <td>StarbucksÂ® Signature Hot Chocolate</td>\n",
       "      <td>430.0</td>\n",
       "      <td>26.0</td>\n",
       "      <td>45.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>12.0</td>\n",
       "      <td>115.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32</th>\n",
       "      <td>CaffÃ¨ Latte</td>\n",
       "      <td>190.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>19.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>13.0</td>\n",
       "      <td>170.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>33</th>\n",
       "      <td>CaffÃ¨ Mocha</td>\n",
       "      <td>290.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>42.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>13.0</td>\n",
       "      <td>140.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35</th>\n",
       "      <td>Caramel Macchiato</td>\n",
       "      <td>250.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>35.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>150.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>36</th>\n",
       "      <td>Cinnamon Dolce Latte</td>\n",
       "      <td>260.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>40.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>11.0</td>\n",
       "      <td>150.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>37</th>\n",
       "      <td>Coconutmilk Mocha Macchiato</td>\n",
       "      <td>250.0</td>\n",
       "      <td>9.0</td>\n",
       "      <td>32.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>12.0</td>\n",
       "      <td>180.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>38</th>\n",
       "      <td>Flat White</td>\n",
       "      <td>180.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>18.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>12.0</td>\n",
       "      <td>160.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>40</th>\n",
       "      <td>Iced CaffÃ¨ Mocha</td>\n",
       "      <td>230.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>36.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>9.0</td>\n",
       "      <td>90.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>41</th>\n",
       "      <td>Iced Caramel Macchiato</td>\n",
       "      <td>250.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>37.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>150.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>42</th>\n",
       "      <td>Iced Cinnamon Dolce Latte</td>\n",
       "      <td>200.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>34.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>95.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>43</th>\n",
       "      <td>Iced Coconutmilk Mocha Macchiato</td>\n",
       "      <td>260.0</td>\n",
       "      <td>9.0</td>\n",
       "      <td>34.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>11.0</td>\n",
       "      <td>180.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>44</th>\n",
       "      <td>Iced Vanilla Latte</td>\n",
       "      <td>190.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>30.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>100.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>45</th>\n",
       "      <td>Iced White Chocolate Mocha</td>\n",
       "      <td>300.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>47.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>190.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46</th>\n",
       "      <td>Latte Macchiato</td>\n",
       "      <td>190.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>19.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>12.0</td>\n",
       "      <td>160.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>47</th>\n",
       "      <td>Latte Macchiato</td>\n",
       "      <td>190.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>19.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>12.0</td>\n",
       "      <td>160.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>48</th>\n",
       "      <td>Vanilla Latte</td>\n",
       "      <td>250.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>37.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>12.0</td>\n",
       "      <td>150.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>49</th>\n",
       "      <td>White Chocolate Mocha</td>\n",
       "      <td>360.0</td>\n",
       "      <td>11.0</td>\n",
       "      <td>53.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>14.0</td>\n",
       "      <td>240.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50</th>\n",
       "      <td>Cinnamon Dolce FrappuccinoÂ® Blended Coffee</td>\n",
       "      <td>350.0</td>\n",
       "      <td>4.5</td>\n",
       "      <td>64.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>15.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>52</th>\n",
       "      <td>Mocha FrappuccinoÂ® Blended Coffee</td>\n",
       "      <td>280.0</td>\n",
       "      <td>2.5</td>\n",
       "      <td>60.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>220.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>54</th>\n",
       "      <td>Cinnamon Dolce CrÃ¨me</td>\n",
       "      <td>200.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>28.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>135.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>55</th>\n",
       "      <td>Vanilla CrÃ¨me</td>\n",
       "      <td>200.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>28.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>135.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>56</th>\n",
       "      <td>Chocolate Smoothie</td>\n",
       "      <td>320.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>53.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>20.0</td>\n",
       "      <td>170.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>57</th>\n",
       "      <td>Strawberry Smoothie</td>\n",
       "      <td>300.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>60.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>16.0</td>\n",
       "      <td>130.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                            Item  Calories   Fat  Carb  Fiber  \\\n",
       "4                      TazoÂ® Bottled Black Mango     150.0   0.0  38.0    0.0   \n",
       "7                      TazoÂ® Bottled Giant Peach     150.0   0.0  37.0    0.0   \n",
       "12                       TazoÂ® Bottled Tazoberry     150.0   0.0  38.0    0.0   \n",
       "17  StarbucksÂ® Doubleshot Protein Dark Chocolate     210.0   2.5  33.0    2.0   \n",
       "18         StarbucksÂ® Doubleshot Protein Vanilla     200.0   2.5  34.0    2.0   \n",
       "19                     TazoÂ® Bottled Black Mango     150.0   0.0  38.0    0.0   \n",
       "22                     TazoÂ® Bottled Giant Peach     150.0   0.0  37.0    0.0   \n",
       "27                       TazoÂ® Bottled Tazoberry     150.0   0.0  38.0    0.0   \n",
       "30                                 Hot Chocolate     320.0   9.0  47.0    4.0   \n",
       "31            StarbucksÂ® Signature Hot Chocolate     430.0  26.0  45.0    5.0   \n",
       "32                                   CaffÃ¨ Latte     190.0   7.0  19.0    0.0   \n",
       "33                                   CaffÃ¨ Mocha     290.0   8.0  42.0    4.0   \n",
       "35                             Caramel Macchiato     250.0   7.0  35.0    0.0   \n",
       "36                          Cinnamon Dolce Latte     260.0   6.0  40.0    0.0   \n",
       "37                   Coconutmilk Mocha Macchiato     250.0   9.0  32.0    0.0   \n",
       "38                                    Flat White     180.0   7.0  18.0    0.0   \n",
       "40                              Iced CaffÃ¨ Mocha     230.0   6.0  36.0    4.0   \n",
       "41                        Iced Caramel Macchiato     250.0   7.0  37.0    0.0   \n",
       "42                     Iced Cinnamon Dolce Latte     200.0   4.0  34.0    0.0   \n",
       "43              Iced Coconutmilk Mocha Macchiato     260.0   9.0  34.0    0.0   \n",
       "44                            Iced Vanilla Latte     190.0   4.0  30.0    0.0   \n",
       "45                    Iced White Chocolate Mocha     300.0   8.0  47.0    0.0   \n",
       "46                               Latte Macchiato     190.0   7.0  19.0    0.0   \n",
       "47                               Latte Macchiato     190.0   7.0  19.0    0.0   \n",
       "48                                 Vanilla Latte     250.0   6.0  37.0    0.0   \n",
       "49                         White Chocolate Mocha     360.0  11.0  53.0    0.0   \n",
       "50    Cinnamon Dolce FrappuccinoÂ® Blended Coffee     350.0   4.5  64.0    0.0   \n",
       "52             Mocha FrappuccinoÂ® Blended Coffee     280.0   2.5  60.0    2.0   \n",
       "54                          Cinnamon Dolce CrÃ¨me     200.0   6.0  28.0    0.0   \n",
       "55                                 Vanilla CrÃ¨me     200.0   6.0  28.0    0.0   \n",
       "56                            Chocolate Smoothie     320.0   5.0  53.0    8.0   \n",
       "57                           Strawberry Smoothie     300.0   2.0  60.0    7.0   \n",
       "\n",
       "    Protein  Sodium  \n",
       "4       0.0    15.0  \n",
       "7       0.0    15.0  \n",
       "12      0.0    15.0  \n",
       "17     20.0   115.0  \n",
       "18     20.0   120.0  \n",
       "19      0.0    15.0  \n",
       "22      0.0    15.0  \n",
       "27      0.0    15.0  \n",
       "30     14.0   160.0  \n",
       "31     12.0   115.0  \n",
       "32     13.0   170.0  \n",
       "33     13.0   140.0  \n",
       "35     10.0   150.0  \n",
       "36     11.0   150.0  \n",
       "37     12.0   180.0  \n",
       "38     12.0   160.0  \n",
       "40      9.0    90.0  \n",
       "41     10.0   150.0  \n",
       "42      7.0    95.0  \n",
       "43     11.0   180.0  \n",
       "44      7.0   100.0  \n",
       "45     10.0   190.0  \n",
       "46     12.0   160.0  \n",
       "47     12.0   160.0  \n",
       "48     12.0   150.0  \n",
       "49     14.0   240.0  \n",
       "50     15.0     0.0  \n",
       "52      4.0   220.0  \n",
       "54     10.0   135.0  \n",
       "55     10.0   135.0  \n",
       "56     20.0   170.0  \n",
       "57     16.0   130.0  "
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "more_150_cal = drinks_df.loc[drinks_df['Calories'] >= 150.0]\n",
    "more_150_cal"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "![green-divider](https://user-images.githubusercontent.com/7065401/52071924-c003ad80-2562-11e9-8297-1c6595f8a7ff.png)\n",
    "\n",
    "### Compare item characteristics\n",
    "\n",
    "Create a `compare_groups()` function that compares a given field of both groups of data, `less_equal_150_cal` and `more_150_cal`, by showing two overlapped histograms.\n",
    "\n",
    "- You should use different colors per histogram. Also add a little bit of opacity (use `alpha=0.4`).\n",
    "- The function MUST check that the given field exists, and raise `ValueError` with a \"Field not found\" message otherwise.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [],
   "source": [
    "from matplotlib import pyplot\n",
    "def compare_groups(field):\n",
    "    if field not in less_equal_150_cal or field not in more_150_cal:\n",
    "        raise ValueError(\"Field not found\")\n",
    "    less_equal_150_cal[field].plot(kind = \"hist\",alpha=0.4, color=\"red\", label='less 150 cal',title = field,legend = True)\n",
    "    more_150_cal[field].plot(kind = \"hist\",alpha=0.4, color = \"blue\", label='more than 150 cal',legend = True)\n",
    "    \n",
    "    \n",
    "    "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Validate your function showing a comparison of the `Calories` per group."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "compare_groups(\"Calories\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Now answer: **Less Calories implies less Sodium?**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "compare_groups(\"Sodium\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Less Calories implies less Carbs?**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "compare_groups(\"Carb\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Less Calories implies less Proteins?**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "compare_groups(\"Protein\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "![green-divider](https://user-images.githubusercontent.com/7065401/52071924-c003ad80-2562-11e9-8297-1c6595f8a7ff.png)\n",
    "\n",
    "## Healthy diet interest\n",
    "\n",
    "In order to measure interest on healthy diets, we'll analyze how many pageviews the article `Healthy diet` received during the last years.\n",
    "\n",
    "![Food-piramid](https://user-images.githubusercontent.com/7065401/68880286-bf02cd80-06e9-11ea-8d42-ff6dbb539f7d.png)\n",
    "\n",
    "To get pageviews from Wikipedia, we'll need to use the _Analytics API_. Here you can find [the documentation](https://wikitech.wikimedia.org/wiki/Analytics/AQS/Pageviews) to get pageviews from an article.\n",
    "\n",
    "To get monthly pageviews for a given article, you can use the following endpoint:\n",
    "\n",
    "```\n",
    "https://wikimedia.org/api/rest_v1/metrics/pageviews/per-article/en.wikipedia/all-access/all-agents/{ARTICLE}/monthly/{START}/{END}\n",
    "```"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "![green-divider](https://user-images.githubusercontent.com/7065401/52071924-c003ad80-2562-11e9-8297-1c6595f8a7ff.png)\n",
    "\n",
    "###Â Get data from Wikipedia using its API\n",
    "\n",
    "Make a request to Wikipedia API to get monthly page views for `Healthy_diet` article from year 2015 (`2015010100`) to 2019 (`2019100100`).\n",
    "\n",
    "Store the response in a `pageviews_df` DataFrame variable."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {},
   "outputs": [],
   "source": [
    "url = \"https://wikimedia.org/api/rest_v1/metrics/pageviews/per-article/en.wikipedia/all-access/all-agents/Healthy_diet/monthly/2015010100/2019100100\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>project</th>\n",
       "      <th>article</th>\n",
       "      <th>granularity</th>\n",
       "      <th>timestamp</th>\n",
       "      <th>access</th>\n",
       "      <th>agent</th>\n",
       "      <th>views</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>en.wikipedia</td>\n",
       "      <td>Healthy_diet</td>\n",
       "      <td>monthly</td>\n",
       "      <td>2015070100</td>\n",
       "      <td>all-access</td>\n",
       "      <td>all-agents</td>\n",
       "      <td>24293</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>en.wikipedia</td>\n",
       "      <td>Healthy_diet</td>\n",
       "      <td>monthly</td>\n",
       "      <td>2015080100</td>\n",
       "      <td>all-access</td>\n",
       "      <td>all-agents</td>\n",
       "      <td>41794</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>en.wikipedia</td>\n",
       "      <td>Healthy_diet</td>\n",
       "      <td>monthly</td>\n",
       "      <td>2015090100</td>\n",
       "      <td>all-access</td>\n",
       "      <td>all-agents</td>\n",
       "      <td>23606</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>en.wikipedia</td>\n",
       "      <td>Healthy_diet</td>\n",
       "      <td>monthly</td>\n",
       "      <td>2015100100</td>\n",
       "      <td>all-access</td>\n",
       "      <td>all-agents</td>\n",
       "      <td>26351</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>en.wikipedia</td>\n",
       "      <td>Healthy_diet</td>\n",
       "      <td>monthly</td>\n",
       "      <td>2015110100</td>\n",
       "      <td>all-access</td>\n",
       "      <td>all-agents</td>\n",
       "      <td>24596</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        project       article granularity   timestamp      access       agent  \\\n",
       "0  en.wikipedia  Healthy_diet     monthly  2015070100  all-access  all-agents   \n",
       "1  en.wikipedia  Healthy_diet     monthly  2015080100  all-access  all-agents   \n",
       "2  en.wikipedia  Healthy_diet     monthly  2015090100  all-access  all-agents   \n",
       "3  en.wikipedia  Healthy_diet     monthly  2015100100  all-access  all-agents   \n",
       "4  en.wikipedia  Healthy_diet     monthly  2015110100  all-access  all-agents   \n",
       "\n",
       "   views  \n",
       "0  24293  \n",
       "1  41794  \n",
       "2  23606  \n",
       "3  26351  \n",
       "4  24596  "
      ]
     },
     "execution_count": 40,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from pandas.io.json import json_normalize\n",
    "url = \"https://wikimedia.org/api/rest_v1/metrics/pageviews/per-article/en.wikipedia/all-access/all-agents/Healthy_diet/monthly/2015010100/2019100100\"\n",
    "req = requests.get(url)\n",
    "\n",
    "json_dict = req.json()\n",
    "\n",
    "pageviews_df = json_normalize(json_dict['items'])\n",
    "pageviews_df.head()\n",
    "                              "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "![green-divider](https://user-images.githubusercontent.com/7065401/52071924-c003ad80-2562-11e9-8297-1c6595f8a7ff.png)\n",
    "\n",
    "### When was the highest search peak?\n",
    "\n",
    "Save in a `max_pageviews_str` variable the date where `Healthy_diet` article had the highest volume of page views.\n",
    "\n",
    "Also save a `max_pageview_date` with that previous value parsed to `datetime`."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Timestamp('2017-07-01 00:00:00')"
      ]
     },
     "execution_count": 42,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "max_views = pageviews_df[\"views\"].max()\n",
    "max_pageviews_str = pageviews_df.loc[pageviews_df[\"views\"] == max_views,\"timestamp\"].values[0]\n",
    "\n",
    "max_pageviews_date = pd.to_datetime(max_pageviews_str, format=\"%Y%m%d%H\")\n",
    "max_pageviews_date\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We can draw a quick plot showing the evolution of `views` per month:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1008x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "\n",
    "plt.figure(figsize=(14, 6))\n",
    "plt.plot(pageviews_df['timestamp'], pageviews_df['views'])\n",
    "\n",
    "plt.axvline(x=max_pageviews_str, color='green')\n",
    "\n",
    "plt.xticks(rotation=90)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "![green-divider](https://user-images.githubusercontent.com/7065401/52071924-c003ad80-2562-11e9-8297-1c6595f8a7ff.png)\n",
    "\n",
    "### Get more data from Wikipedia API\n",
    "\n",
    "Create a `get_pageviews_count()` function that receives a variable number **article names** as argument, and returns a dictionary with the sum of pageviews during 2018 for each of these article names.\n",
    "\n",
    "- The function MUST check that at least one parameter is found, and raise a `ValueError` otherwise.\n",
    "\n",
    "```\n",
    "https://wikimedia.org/api/rest_v1/metrics/pageviews/per-article/en.wikipedia/all-access/all-agents/{ARTICLE}/monthly/2018010100/2018123100\n",
    "```"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Â your code goes here\n",
    "\n",
    "def get_pageviews_count(*args):\n",
    "    if len(args) == 0:\n",
    "        return \"No article names provided\"\n",
    "    new_dict = {}\n",
    "    for article in args:\n",
    "        url = \"https://wikimedia.org/api/rest_v1/metrics/pageviews/per-article/en.wikipedia/all-access/all-agents/{article}/monthly/2018010100/2018123100\".format(article = article)\n",
    "        req = requests.get(url)\n",
    "        \n",
    "        json_dict = req.json()\n",
    "        for article in json_dict[\"items\"]:\n",
    "            for key,val in article.items():\n",
    "                if val in args:\n",
    "                    if val in new_dict:\n",
    "                        new_dict[article[\"article\"]] += article[\"views\"]\n",
    "                    else:\n",
    "                        new_dict[article[\"article\"]] = article[\"views\"]\n",
    "                        \n",
    "    return new_dict"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Calling `get_pageviews_count('Healthy_diet', 'Food', 'Obesity')` should return something like:\n",
    "\n",
    "```\n",
    "{'Healthy_diet': 478712, 'Food': 1125874, 'Obesity': 1092577}\n",
    "```"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'Healthy_diet': 478712, 'Food': 1125874, 'Obesity': 1092577}"
      ]
     },
     "execution_count": 66,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "get_pageviews_count('Healthy_diet', 'Food', 'Obesity')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "![green-divider](https://user-images.githubusercontent.com/7065401/52071924-c003ad80-2562-11e9-8297-1c6595f8a7ff.png)\n",
    "\n",
    "## Obesity trends in the USA\n",
    "\n",
    "Obesity in the United States is a major health issue, resulting in numerous diseases, specifically increased risk of certain types of cancer, coronary artery disease, type 2 diabetes, stroke, as well as significant increases in early mortality and economic costs.\n",
    "\n",
    "Let's analyze obesity trends on each state of the USA. To do that take a look at the _Obesity in the United States_ Wikipedia article where they analyze obesity revalence by state and territory.\n",
    "\n",
    "<img width=\"500\" alt=\"Obesity-trends\" src=\"https://user-images.githubusercontent.com/7065401/68873389-5a8e4100-06de-11ea-844c-5ec622af5caa.png\">"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "metadata": {},
   "outputs": [],
   "source": [
    "url = 'https://en.wikipedia.org/wiki/Obesity_in_the_United_States'"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "![green-divider](https://user-images.githubusercontent.com/7065401/52071924-c003ad80-2562-11e9-8297-1c6595f8a7ff.png)\n",
    "\n",
    "###Â Read the HTML table at the end of the article into a `obesity_df` DataFrame object.\n",
    "\n",
    "> Be aware of parsing correctly `NaN` values that appear as `â` characters.\n",
    "\n",
    "<img width=\"450\" alt=\"Obesity-table\" src=\"https://user-images.githubusercontent.com/7065401/68880373-e5286d80-06e9-11ea-9bd0-f59ffcf02341.png\">"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 90,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>States, District, &amp; Territories</th>\n",
       "      <th>Obese adults (mid-2000s)</th>\n",
       "      <th>Obese adults (2016)[62][67]</th>\n",
       "      <th>Overweight (incl. obese) adults(mid-2000s)</th>\n",
       "      <th>Obese children and adolescents(mid-2000s)[68]</th>\n",
       "      <th>Obesity rank</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Alabama</td>\n",
       "      <td>30.1%</td>\n",
       "      <td>35.7%</td>\n",
       "      <td>65.4%</td>\n",
       "      <td>16.7%</td>\n",
       "      <td>3.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Alaska</td>\n",
       "      <td>27.3%</td>\n",
       "      <td>31.4%</td>\n",
       "      <td>64.5%</td>\n",
       "      <td>11.1%</td>\n",
       "      <td>14.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>American Samoa</td>\n",
       "      <td>NaN</td>\n",
       "      <td>75%[66]</td>\n",
       "      <td>95%[69]</td>\n",
       "      <td>35%[66][70]</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Arizona</td>\n",
       "      <td>23.3%</td>\n",
       "      <td>29.0%</td>\n",
       "      <td>59.5%</td>\n",
       "      <td>12.2%</td>\n",
       "      <td>40.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Arkansas</td>\n",
       "      <td>28.1%</td>\n",
       "      <td>35.7%</td>\n",
       "      <td>64.7%</td>\n",
       "      <td>16.4%</td>\n",
       "      <td>9.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>California</td>\n",
       "      <td>23.1%</td>\n",
       "      <td>25.0%</td>\n",
       "      <td>59.4%</td>\n",
       "      <td>13.2%</td>\n",
       "      <td>41.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>Colorado</td>\n",
       "      <td>21.0%</td>\n",
       "      <td>22.3%</td>\n",
       "      <td>55.0%</td>\n",
       "      <td>9.9%</td>\n",
       "      <td>51.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>Connecticut</td>\n",
       "      <td>20.8%</td>\n",
       "      <td>26.0%</td>\n",
       "      <td>58.7%</td>\n",
       "      <td>12.3%</td>\n",
       "      <td>49.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>Delaware</td>\n",
       "      <td>25.9%</td>\n",
       "      <td>30.7%</td>\n",
       "      <td>63.9%</td>\n",
       "      <td>22.8%</td>\n",
       "      <td>22.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>District of Columbia</td>\n",
       "      <td>22.1%</td>\n",
       "      <td>22.6%</td>\n",
       "      <td>55.0%</td>\n",
       "      <td>14.8%</td>\n",
       "      <td>43.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>Florida</td>\n",
       "      <td>23.3%</td>\n",
       "      <td>27.4%</td>\n",
       "      <td>60.8%</td>\n",
       "      <td>14.4%</td>\n",
       "      <td>39.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>Georgia</td>\n",
       "      <td>27.5%</td>\n",
       "      <td>31.4%</td>\n",
       "      <td>63.3%</td>\n",
       "      <td>16.4%</td>\n",
       "      <td>12.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>Guam</td>\n",
       "      <td>NaN</td>\n",
       "      <td>28.3%</td>\n",
       "      <td>NaN</td>\n",
       "      <td>22%[71]</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>Hawaii</td>\n",
       "      <td>20.7%</td>\n",
       "      <td>23.8%</td>\n",
       "      <td>55.3%</td>\n",
       "      <td>13.3%</td>\n",
       "      <td>50.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>Idaho</td>\n",
       "      <td>24.6%</td>\n",
       "      <td>27.4%</td>\n",
       "      <td>61.4%</td>\n",
       "      <td>10.1%</td>\n",
       "      <td>31.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>Illinois</td>\n",
       "      <td>25.3%</td>\n",
       "      <td>31.6%</td>\n",
       "      <td>61.8%</td>\n",
       "      <td>15.8%</td>\n",
       "      <td>26.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>Indiana</td>\n",
       "      <td>27.5%</td>\n",
       "      <td>32.5%</td>\n",
       "      <td>62.8%</td>\n",
       "      <td>15.6%</td>\n",
       "      <td>11.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>Iowa</td>\n",
       "      <td>26.3%</td>\n",
       "      <td>32.0%</td>\n",
       "      <td>63.4%</td>\n",
       "      <td>12.5%</td>\n",
       "      <td>19.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>Kansas</td>\n",
       "      <td>25.8%</td>\n",
       "      <td>31.2%</td>\n",
       "      <td>62.3%</td>\n",
       "      <td>14.0%</td>\n",
       "      <td>23.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>Kentucky</td>\n",
       "      <td>28.4%</td>\n",
       "      <td>34.2%</td>\n",
       "      <td>66.8%</td>\n",
       "      <td>20.6%</td>\n",
       "      <td>7.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>Louisiana</td>\n",
       "      <td>29.5%</td>\n",
       "      <td>35.5%</td>\n",
       "      <td>64.2%</td>\n",
       "      <td>17.2%</td>\n",
       "      <td>4.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>Maine</td>\n",
       "      <td>23.7%</td>\n",
       "      <td>29.9%</td>\n",
       "      <td>60.8%</td>\n",
       "      <td>12.7%</td>\n",
       "      <td>34.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>Maryland</td>\n",
       "      <td>25.2%</td>\n",
       "      <td>29.9%</td>\n",
       "      <td>61.5%</td>\n",
       "      <td>13.3%</td>\n",
       "      <td>28.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>Massachusetts</td>\n",
       "      <td>20.9%</td>\n",
       "      <td>23.6%</td>\n",
       "      <td>56.8%</td>\n",
       "      <td>13.6%</td>\n",
       "      <td>48.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>Michigan</td>\n",
       "      <td>27.7%</td>\n",
       "      <td>32.5%</td>\n",
       "      <td>63.9%</td>\n",
       "      <td>14.5%</td>\n",
       "      <td>10.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>Minnesota</td>\n",
       "      <td>24.8%</td>\n",
       "      <td>27.8%</td>\n",
       "      <td>61.9%</td>\n",
       "      <td>10.1%</td>\n",
       "      <td>30.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>Mississippi</td>\n",
       "      <td>34.4%</td>\n",
       "      <td>37.3%</td>\n",
       "      <td>67.4%</td>\n",
       "      <td>17.8%</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>Missouri</td>\n",
       "      <td>27.4%</td>\n",
       "      <td>31.7%</td>\n",
       "      <td>63.3%</td>\n",
       "      <td>15.6%</td>\n",
       "      <td>13.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>Montana</td>\n",
       "      <td>21.7%</td>\n",
       "      <td>25.5%</td>\n",
       "      <td>59.6%</td>\n",
       "      <td>11.1%</td>\n",
       "      <td>45.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>Nebraska</td>\n",
       "      <td>26.5%</td>\n",
       "      <td>32.0%</td>\n",
       "      <td>63.9%</td>\n",
       "      <td>11.9%</td>\n",
       "      <td>18.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30</th>\n",
       "      <td>Nevada</td>\n",
       "      <td>23.6%</td>\n",
       "      <td>25.8%</td>\n",
       "      <td>61.8%</td>\n",
       "      <td>12.4%</td>\n",
       "      <td>36.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>31</th>\n",
       "      <td>New Hampshire</td>\n",
       "      <td>23.6%</td>\n",
       "      <td>26.6%</td>\n",
       "      <td>60.8%</td>\n",
       "      <td>12.9%</td>\n",
       "      <td>35.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32</th>\n",
       "      <td>New Jersey</td>\n",
       "      <td>22.9%</td>\n",
       "      <td>27.4%</td>\n",
       "      <td>60.5%</td>\n",
       "      <td>13.7%</td>\n",
       "      <td>42.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>33</th>\n",
       "      <td>New Mexico</td>\n",
       "      <td>23.3%</td>\n",
       "      <td>28.3%</td>\n",
       "      <td>60.3%</td>\n",
       "      <td>16.8%</td>\n",
       "      <td>38.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>34</th>\n",
       "      <td>New York</td>\n",
       "      <td>23.5%</td>\n",
       "      <td>25.5%</td>\n",
       "      <td>60.0%</td>\n",
       "      <td>15.3%</td>\n",
       "      <td>37.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35</th>\n",
       "      <td>North Carolina</td>\n",
       "      <td>27.1%</td>\n",
       "      <td>31.8%</td>\n",
       "      <td>63.4%</td>\n",
       "      <td>19.3%</td>\n",
       "      <td>16.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>36</th>\n",
       "      <td>North Dakota</td>\n",
       "      <td>25.9%</td>\n",
       "      <td>31.9%</td>\n",
       "      <td>64.5%</td>\n",
       "      <td>12.1%</td>\n",
       "      <td>21.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>37</th>\n",
       "      <td>Northern Mariana Islands</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>16%[72]</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>38</th>\n",
       "      <td>Ohio</td>\n",
       "      <td>26.9%</td>\n",
       "      <td>31.5%</td>\n",
       "      <td>63.3%</td>\n",
       "      <td>14.2%</td>\n",
       "      <td>17.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>39</th>\n",
       "      <td>Oklahoma</td>\n",
       "      <td>28.1%</td>\n",
       "      <td>32.8%</td>\n",
       "      <td>64.2%</td>\n",
       "      <td>15.4%</td>\n",
       "      <td>8.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>40</th>\n",
       "      <td>Oregon</td>\n",
       "      <td>25.0%</td>\n",
       "      <td>28.7%</td>\n",
       "      <td>60.8%</td>\n",
       "      <td>14.1%</td>\n",
       "      <td>29.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>41</th>\n",
       "      <td>Pennsylvania</td>\n",
       "      <td>25.7%</td>\n",
       "      <td>30.3%</td>\n",
       "      <td>61.9%</td>\n",
       "      <td>13.3%</td>\n",
       "      <td>24.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>42</th>\n",
       "      <td>Puerto Rico</td>\n",
       "      <td>NaN</td>\n",
       "      <td>30.7%</td>\n",
       "      <td>NaN</td>\n",
       "      <td>26%[73][74]</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>43</th>\n",
       "      <td>Rhode Island</td>\n",
       "      <td>21.4%</td>\n",
       "      <td>26.6%</td>\n",
       "      <td>60.4%</td>\n",
       "      <td>11.9%</td>\n",
       "      <td>46.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>44</th>\n",
       "      <td>South Carolina</td>\n",
       "      <td>29.2%</td>\n",
       "      <td>32.3%</td>\n",
       "      <td>65.1%</td>\n",
       "      <td>18.9%</td>\n",
       "      <td>5.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>45</th>\n",
       "      <td>South Dakota</td>\n",
       "      <td>26.1%</td>\n",
       "      <td>29.6%</td>\n",
       "      <td>64.2%</td>\n",
       "      <td>12.1%</td>\n",
       "      <td>20.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46</th>\n",
       "      <td>Tennessee</td>\n",
       "      <td>29.0%</td>\n",
       "      <td>34.8%</td>\n",
       "      <td>65.0%</td>\n",
       "      <td>20.0%</td>\n",
       "      <td>6.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>47</th>\n",
       "      <td>Texas</td>\n",
       "      <td>27.2%</td>\n",
       "      <td>33.7%</td>\n",
       "      <td>64.1%</td>\n",
       "      <td>19.1%</td>\n",
       "      <td>15.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>48</th>\n",
       "      <td>Utah</td>\n",
       "      <td>21.8%</td>\n",
       "      <td>25.4%</td>\n",
       "      <td>56.4%</td>\n",
       "      <td>8.5%</td>\n",
       "      <td>44.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>49</th>\n",
       "      <td>Vermont</td>\n",
       "      <td>21.1%</td>\n",
       "      <td>27.1%</td>\n",
       "      <td>56.9%</td>\n",
       "      <td>11.3%</td>\n",
       "      <td>47.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50</th>\n",
       "      <td>Virgin Islands (U.S.)</td>\n",
       "      <td>NaN</td>\n",
       "      <td>32.5%</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>51</th>\n",
       "      <td>Virginia</td>\n",
       "      <td>25.2%</td>\n",
       "      <td>29.0%</td>\n",
       "      <td>61.6%</td>\n",
       "      <td>13.8%</td>\n",
       "      <td>27.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>52</th>\n",
       "      <td>Washington</td>\n",
       "      <td>24.5%</td>\n",
       "      <td>28.6%</td>\n",
       "      <td>60.7%</td>\n",
       "      <td>10.8%</td>\n",
       "      <td>32.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>53</th>\n",
       "      <td>West Virginia</td>\n",
       "      <td>30.6%</td>\n",
       "      <td>37.7%</td>\n",
       "      <td>66.8%</td>\n",
       "      <td>20.9%</td>\n",
       "      <td>2.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>54</th>\n",
       "      <td>Wisconsin</td>\n",
       "      <td>25.5%</td>\n",
       "      <td>30.7%</td>\n",
       "      <td>62.4%</td>\n",
       "      <td>13.5%</td>\n",
       "      <td>25.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>55</th>\n",
       "      <td>Wyoming</td>\n",
       "      <td>24.0%</td>\n",
       "      <td>27.7%</td>\n",
       "      <td>61.7%</td>\n",
       "      <td>8.7%</td>\n",
       "      <td>33.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   States, District, & Territories Obese adults (mid-2000s)  \\\n",
       "0                          Alabama                    30.1%   \n",
       "1                           Alaska                    27.3%   \n",
       "2                   American Samoa                      NaN   \n",
       "3                          Arizona                    23.3%   \n",
       "4                         Arkansas                    28.1%   \n",
       "5                       California                    23.1%   \n",
       "6                         Colorado                    21.0%   \n",
       "7                      Connecticut                    20.8%   \n",
       "8                         Delaware                    25.9%   \n",
       "9             District of Columbia                    22.1%   \n",
       "10                         Florida                    23.3%   \n",
       "11                         Georgia                    27.5%   \n",
       "12                            Guam                      NaN   \n",
       "13                          Hawaii                    20.7%   \n",
       "14                           Idaho                    24.6%   \n",
       "15                        Illinois                    25.3%   \n",
       "16                         Indiana                    27.5%   \n",
       "17                            Iowa                    26.3%   \n",
       "18                          Kansas                    25.8%   \n",
       "19                        Kentucky                    28.4%   \n",
       "20                       Louisiana                    29.5%   \n",
       "21                           Maine                    23.7%   \n",
       "22                        Maryland                    25.2%   \n",
       "23                   Massachusetts                    20.9%   \n",
       "24                        Michigan                    27.7%   \n",
       "25                       Minnesota                    24.8%   \n",
       "26                     Mississippi                    34.4%   \n",
       "27                        Missouri                    27.4%   \n",
       "28                         Montana                    21.7%   \n",
       "29                        Nebraska                    26.5%   \n",
       "30                          Nevada                    23.6%   \n",
       "31                   New Hampshire                    23.6%   \n",
       "32                      New Jersey                    22.9%   \n",
       "33                      New Mexico                    23.3%   \n",
       "34                        New York                    23.5%   \n",
       "35                  North Carolina                    27.1%   \n",
       "36                    North Dakota                    25.9%   \n",
       "37        Northern Mariana Islands                      NaN   \n",
       "38                            Ohio                    26.9%   \n",
       "39                        Oklahoma                    28.1%   \n",
       "40                          Oregon                    25.0%   \n",
       "41                    Pennsylvania                    25.7%   \n",
       "42                     Puerto Rico                      NaN   \n",
       "43                    Rhode Island                    21.4%   \n",
       "44                  South Carolina                    29.2%   \n",
       "45                    South Dakota                    26.1%   \n",
       "46                       Tennessee                    29.0%   \n",
       "47                           Texas                    27.2%   \n",
       "48                            Utah                    21.8%   \n",
       "49                         Vermont                    21.1%   \n",
       "50           Virgin Islands (U.S.)                      NaN   \n",
       "51                        Virginia                    25.2%   \n",
       "52                      Washington                    24.5%   \n",
       "53                   West Virginia                    30.6%   \n",
       "54                       Wisconsin                    25.5%   \n",
       "55                         Wyoming                    24.0%   \n",
       "\n",
       "   Obese adults (2016)[62][67] Overweight (incl. obese) adults(mid-2000s)  \\\n",
       "0                        35.7%                                      65.4%   \n",
       "1                        31.4%                                      64.5%   \n",
       "2                      75%[66]                                    95%[69]   \n",
       "3                        29.0%                                      59.5%   \n",
       "4                        35.7%                                      64.7%   \n",
       "5                        25.0%                                      59.4%   \n",
       "6                        22.3%                                      55.0%   \n",
       "7                        26.0%                                      58.7%   \n",
       "8                        30.7%                                      63.9%   \n",
       "9                        22.6%                                      55.0%   \n",
       "10                       27.4%                                      60.8%   \n",
       "11                       31.4%                                      63.3%   \n",
       "12                       28.3%                                        NaN   \n",
       "13                       23.8%                                      55.3%   \n",
       "14                       27.4%                                      61.4%   \n",
       "15                       31.6%                                      61.8%   \n",
       "16                       32.5%                                      62.8%   \n",
       "17                       32.0%                                      63.4%   \n",
       "18                       31.2%                                      62.3%   \n",
       "19                       34.2%                                      66.8%   \n",
       "20                       35.5%                                      64.2%   \n",
       "21                       29.9%                                      60.8%   \n",
       "22                       29.9%                                      61.5%   \n",
       "23                       23.6%                                      56.8%   \n",
       "24                       32.5%                                      63.9%   \n",
       "25                       27.8%                                      61.9%   \n",
       "26                       37.3%                                      67.4%   \n",
       "27                       31.7%                                      63.3%   \n",
       "28                       25.5%                                      59.6%   \n",
       "29                       32.0%                                      63.9%   \n",
       "30                       25.8%                                      61.8%   \n",
       "31                       26.6%                                      60.8%   \n",
       "32                       27.4%                                      60.5%   \n",
       "33                       28.3%                                      60.3%   \n",
       "34                       25.5%                                      60.0%   \n",
       "35                       31.8%                                      63.4%   \n",
       "36                       31.9%                                      64.5%   \n",
       "37                         NaN                                        NaN   \n",
       "38                       31.5%                                      63.3%   \n",
       "39                       32.8%                                      64.2%   \n",
       "40                       28.7%                                      60.8%   \n",
       "41                       30.3%                                      61.9%   \n",
       "42                       30.7%                                        NaN   \n",
       "43                       26.6%                                      60.4%   \n",
       "44                       32.3%                                      65.1%   \n",
       "45                       29.6%                                      64.2%   \n",
       "46                       34.8%                                      65.0%   \n",
       "47                       33.7%                                      64.1%   \n",
       "48                       25.4%                                      56.4%   \n",
       "49                       27.1%                                      56.9%   \n",
       "50                       32.5%                                        NaN   \n",
       "51                       29.0%                                      61.6%   \n",
       "52                       28.6%                                      60.7%   \n",
       "53                       37.7%                                      66.8%   \n",
       "54                       30.7%                                      62.4%   \n",
       "55                       27.7%                                      61.7%   \n",
       "\n",
       "   Obese children and adolescents(mid-2000s)[68]  Obesity rank  \n",
       "0                                          16.7%           3.0  \n",
       "1                                          11.1%          14.0  \n",
       "2                                    35%[66][70]           NaN  \n",
       "3                                          12.2%          40.0  \n",
       "4                                          16.4%           9.0  \n",
       "5                                          13.2%          41.0  \n",
       "6                                           9.9%          51.0  \n",
       "7                                          12.3%          49.0  \n",
       "8                                          22.8%          22.0  \n",
       "9                                          14.8%          43.0  \n",
       "10                                         14.4%          39.0  \n",
       "11                                         16.4%          12.0  \n",
       "12                                       22%[71]           NaN  \n",
       "13                                         13.3%          50.0  \n",
       "14                                         10.1%          31.0  \n",
       "15                                         15.8%          26.0  \n",
       "16                                         15.6%          11.0  \n",
       "17                                         12.5%          19.0  \n",
       "18                                         14.0%          23.0  \n",
       "19                                         20.6%           7.0  \n",
       "20                                         17.2%           4.0  \n",
       "21                                         12.7%          34.0  \n",
       "22                                         13.3%          28.0  \n",
       "23                                         13.6%          48.0  \n",
       "24                                         14.5%          10.0  \n",
       "25                                         10.1%          30.0  \n",
       "26                                         17.8%           1.0  \n",
       "27                                         15.6%          13.0  \n",
       "28                                         11.1%          45.0  \n",
       "29                                         11.9%          18.0  \n",
       "30                                         12.4%          36.0  \n",
       "31                                         12.9%          35.0  \n",
       "32                                         13.7%          42.0  \n",
       "33                                         16.8%          38.0  \n",
       "34                                         15.3%          37.0  \n",
       "35                                         19.3%          16.0  \n",
       "36                                         12.1%          21.0  \n",
       "37                                       16%[72]           NaN  \n",
       "38                                         14.2%          17.0  \n",
       "39                                         15.4%           8.0  \n",
       "40                                         14.1%          29.0  \n",
       "41                                         13.3%          24.0  \n",
       "42                                   26%[73][74]           NaN  \n",
       "43                                         11.9%          46.0  \n",
       "44                                         18.9%           5.0  \n",
       "45                                         12.1%          20.0  \n",
       "46                                         20.0%           6.0  \n",
       "47                                         19.1%          15.0  \n",
       "48                                          8.5%          44.0  \n",
       "49                                         11.3%          47.0  \n",
       "50                                           NaN           NaN  \n",
       "51                                         13.8%          27.0  \n",
       "52                                         10.8%          32.0  \n",
       "53                                         20.9%           2.0  \n",
       "54                                         13.5%          25.0  \n",
       "55                                          8.7%          33.0  "
      ]
     },
     "execution_count": 90,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "obesity_df = pd.read_html(url,na_values = [\"â\"])[0]\n",
    "obesity_df\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "![green-divider](https://user-images.githubusercontent.com/7065401/52071924-c003ad80-2562-11e9-8297-1c6595f8a7ff.png)\n",
    "\n",
    "###Â Sort the states by _Obesity rank_ and get the 5 states at the top. Show name and obesity rank."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 94,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>States, District, &amp; Territories</th>\n",
       "      <th>Obesity rank</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>Mississippi</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>53</th>\n",
       "      <td>West Virginia</td>\n",
       "      <td>2.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Alabama</td>\n",
       "      <td>3.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>Louisiana</td>\n",
       "      <td>4.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>44</th>\n",
       "      <td>South Carolina</td>\n",
       "      <td>5.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   States, District, & Territories  Obesity rank\n",
       "26                     Mississippi           1.0\n",
       "53                   West Virginia           2.0\n",
       "0                          Alabama           3.0\n",
       "20                       Louisiana           4.0\n",
       "44                  South Carolina           5.0"
      ]
     },
     "execution_count": 94,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "obesity_df.sort_values(\"Obesity rank\")[[\"States, District, & Territories\",\"Obesity rank\"]].head(5)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "![purple-divider](https://user-images.githubusercontent.com/7065401/52071927-c1cd7100-2562-11e9-908a-dde91ba14e59.png)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
